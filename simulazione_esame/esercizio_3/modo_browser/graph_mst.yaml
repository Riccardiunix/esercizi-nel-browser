problem: 03
name: mst
title: Alberi in un grafo
tags:
- grafi
- buone caratterizzazioni
- cicli e tagli
- algoritmi classici su reti
instance:
  n: 6
  m: 7
  edges: '[(A,B)(B,T)(T,A)(T,D)(A,F)(B,E)(E,F)]'

modes:
- free
- with_checks
pages:
  teoria:

graphml: graphml/grafo_10_graph.graphml
nodecol_action: [[red, green], green]
edgecol_action: [[red, blue, black], black]

graphic_instance_descriptor: "<iframe id = 'frame1' src='{% url 'grafo_template' %}'\
  \ width='100%' height='300px' style='border: 1;' overflow='auto' scrolling='no'></iframe>"

tasks:
- 1:
    general_description_before_task: Si consideri il grafo non diretto $G$, con pesi
      sugli archi.
    tot_points: 70
    pt_formato_OK: 0
    pt_feasibility_OK: 1
    pt_consistency_OK: 0
    componenti_stato: [ciclo: edgeset, taglio: edgeset, shore: nodeset]
    task_state_modifier:
    - edgecol
    - nodetag
    - edgetag
    - orientation
    - refresh

    select:
    - NESSUNA [ciclo]- il mio certificato è un ciclo specificato come un sottoinsieme
      di archi
    - TUTTE [taglio] - il mio certificato è un taglio espresso come il sottoinsieme
      degli archi ricompresi nel taglio.
    - TUTTE [shore] - il mio certificato è un taglio espresso con un sottoinsieme
      S dei nodi (gli archi del taglio saranno quelli con un estremo in S )
    - ALCUNE MA NON TUTTE, perchè non tutte [ciclo] - un ciclo per certificare che
      non è in tutte.
    - ALCUNE MA NON TUTTE, perchè alcune [taglio] - un taglio per certificare che
      è in qualcuna. Il taglio espresso come il sottoinsieme degli archi compresi
      nel taglio.
    - ALCUNE MA NON TUTTE,  perchè alcune [shore] - un taglio per certificare che
      è in qualcuna. Il taglio espresso con un sottoinsieme S dei nodi (gli archi
      del taglio saranno quelli con un estremo in S ).
    goals:
    - certificato1
    request: Ritornare una soluzione che rispetti l'opzione selezionata
    init_answ_cell_msg: '#Seleziona nodi e/o archi (colora i nodi cliccando e gli
      archi con il bottone) \n Scegliere poi un opzione di risposta tra le successive.'
    verif: "verify_submission(TALight_problem_name='RO_lcs',checkers=['TALight', 'embedded_in_notebook'],task_dict={'task':\
      \ 1, 'pt_tot': 45, 'pt_formato_OK': 0, 'pt_feasibility_OK': 1, 'pt_consistency_OK':\
      \ 0}, input_data_assigned={'s':'GCTCTACGCTGGATTC','t':'ATGCCGCTTACCGTGATC','beginning':'','ending':'','forbidden_s_interval_first_pos':1000000,'forbidden_s_interval_last_pos':0,'reduce_s_to_its_suffix_of_length':16,'reduce_s_to_its_prefix_of_length':16,'reduce_t_to_its_suffix_of_length':18,'reduce_t_to_its_prefix_of_length':18,'partialDPtable':[],'CAP_FOR_NUM_OPT_SOLS':10,'CAP_FOR_NUM_SOLS':10,},\
      \ long_answer_dict={'opt_sol':(opt_sol1,'opt_sol1'),'opt_val':(opt_val1,'opt_val1'),})"
    init_answ_cell_msg_automatic: '#Seleziona nodi e/o archi (colora i nodi cliccando
      su essi e gli archi con il bottone "Colora Archi")'

- 2:
    general_description_before_task: Si consideri il grafo non-diretto $G$, con pesi
      sugli archi e l'arco (A,B).
    tot_points: 70
    pt_formato_OK: 0
    pt_feasibility_OK: 1
    pt_consistency_OK: 0
    componenti_stato: [col3: edgecol]
    task_state_modifier:
    - edgecol
    #- nodetag
    #- edgetag
    #- orientation
    - refresh
    select:
    - 3-COLORAZIONE DEGLI ARCHI [col3]- il mio certificato è una 3-colorazione degli
      archi
    goals:
    - certificato2
    request: Restituire un grafo in cui si certifica se l'arco è in tutte, nessuna
      o alcune ma non tutte le soluzioni ottime.
    init_answ_cell_msg: '#Seleziona nodi e/o archi (colora i nodi cliccando e gli
      archi con il bottone) \n Scegliere poi un opzione di risposta tra le successive.'
    verif: "verify_submission(TALight_problem_name='RO_lcs',checkers=['TALight', 'embedded_in_notebook'],task_dict={'task':\
      \ 1, 'pt_tot': 45, 'pt_formato_OK': 0, 'pt_feasibility_OK': 1, 'pt_consistency_OK':\
      \ 0}, input_data_assigned={'s':'GCTCTACGCTGGATTC','t':'ATGCCGCTTACCGTGATC','beginning':'','ending':'','forbidden_s_interval_first_pos':1000000,'forbidden_s_interval_last_pos':0,'reduce_s_to_its_suffix_of_length':16,'reduce_s_to_its_prefix_of_length':16,'reduce_t_to_its_suffix_of_length':18,'reduce_t_to_its_prefix_of_length':18,'partialDPtable':[],'CAP_FOR_NUM_OPT_SOLS':10,'CAP_FOR_NUM_SOLS':10,},\
      \ long_answer_dict={'opt_sol':(opt_sol1,'opt_sol1'),'opt_val':(opt_val1,'opt_val1'),})"
    init_answ_cell_msg_automatic: '#Seleziona nodi e/o archi (colora i nodi cliccando
      su essi e gli archi con il bottone "Colora Archi")'
- 3:
    general_description_before_task: Si consideri il grafo non-diretto $G$, con pesi
      sugli archi e l'arco (A,B).
    tot_points: 70
    pt_formato_OK: 0
    pt_feasibility_OK: 1
    pt_consistency_OK: 0
    componenti_stato: [mia_orientazione: orientation, U: nodeset, F: edgeset]
    task_state_modifier:
    - edgecol
    #- nodetag
    #- edgetag
    - orientation
    - refresh

    select:
    - Yes, ORIENTAZIONE ACICLICA [mia_orientazione] - il mio certificato è una orientazione
      aciclica
    - No, FORBIDDEN SUBGRAPH NODE SET U [U] - il mio certificato è un sottografo sui
      nodi U
    - No, FORBIDDEN SUBGRAPH EDGE SET F [F] - il mio certificato è un sottografo di
      archi F
    goals:
    - certificato3
    request: Restituire un grafo in cui si certifica se l'arco è in tutte, nessuna
      o alcune ma non tutte le soluzioni ottime.
    init_answ_cell_msg: '#Seleziona nodi e/o archi (colora i nodi cliccando e gli
      archi con il bottone) \n Scegliere poi un opzione di risposta tra le successive.'
    verif: "verify_submission(TALight_problem_name='RO_lcs',checkers=['TALight', 'embedded_in_notebook'],task_dict={'task':\
      \ 1, 'pt_tot': 45, 'pt_formato_OK': 0, 'pt_feasibility_OK': 1, 'pt_consistency_OK':\
      \ 0}, input_data_assigned={'s':'GCTCTACGCTGGATTC','t':'ATGCCGCTTACCGTGATC','beginning':'','ending':'','forbidden_s_interval_first_pos':1000000,'forbidden_s_interval_last_pos':0,'reduce_s_to_its_suffix_of_length':16,'reduce_s_to_its_prefix_of_length':16,'reduce_t_to_its_suffix_of_length':18,'reduce_t_to_its_prefix_of_length':18,'partialDPtable':[],'CAP_FOR_NUM_OPT_SOLS':10,'CAP_FOR_NUM_SOLS':10,},\
      \ long_answer_dict={'opt_sol':(opt_sol1,'opt_sol1'),'opt_val':(opt_val1,'opt_val1'),})"
    init_answ_cell_msg_automatic: '#Seleziona nodi e/o archi (colora i nodi cliccando
      su essi e gli archi con il bottone "Colora Archi")'
general_description_to_conclude: Ricordati di salvare periodicamente il tuo lavoro.
  Quando hai finito di lavorare su un esercizio ti conviene chiudere la sua scheda
  (potrai sempre riaprirla successivamente)
